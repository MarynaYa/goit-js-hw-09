{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SACtC,IAAIC,EAAUF,SAASC,cAAc,gBACjCE,EAASH,SAASC,cAAc,eAChCG,EAAWJ,SAASC,cAAc,iBA4BtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBC,YAAW,KACKC,KAAKC,SAAW,GAGhCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,UAlC1BR,EAAOe,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAENd,EAAUe,OAAOF,EAAMG,cAAcX,MAAMY,OAC3ChB,EAASc,OAAOF,EAAMG,cAAcE,KAAKD,OACzCf,EAAWa,OAAOF,EAAMG,cAAcG,OAAOF,OAExB,IAAlB,IAAIG,EAAG,EAAGA,GAAKlB,EAAUkB,IAEJjB,EAATiB,EAAGpB,GAChBqB,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBI,YAAW,KACTd,EAAA2B,OAAOC,QAAQ,uBAAqBnB,QAAiBC,SACpDA,MAEJmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBI,YAAW,KACTd,EAAA2B,OAAOG,QAAQ,sBAAoBrB,QAAiBC,SACnDA,MAELL,GAAWC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(`.form`);\nlet delayEl = document.querySelector('[name=delay]');\nlet stepEl = document.querySelector('[name=step]');\nlet amountEl = document.querySelector('[name=amount]');\n\nformEl.addEventListener(`submit`, onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  delayEl = Number(event.currentTarget.delay.value);\n  stepEl = Number(event.currentTarget.step.value);\n  amountEl = Number(event.currentTarget.amount.value);\n  //перебираем значения ввода\nfor (let i =1; i <= amountEl; i++) { \n   // ф-ция возвращала один промиc\n   createPromise(i, delayEl)\n   .then(({ position, delay }) => {\n     setTimeout(() => {\n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n     }, delay);\n   })\n   .catch(({ position, delay }) => {\n     setTimeout(() => {\n       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n     }, delay);\n   });\n   delayEl += stepEl;\n}\n}\n// ф-ция при сабмите вызывается столько раз, сколько ввели в поле amount\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n   {    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n \n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    });\n  })\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.86c57022.js.map"}