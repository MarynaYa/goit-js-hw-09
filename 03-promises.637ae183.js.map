{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SASMC,EAASC,SAASC,cAAe,SACnCC,EAAUF,SAASC,cAAc,gBACjCE,EAASH,SAASC,cAAc,eAChCG,EAAWJ,SAASC,cAAc,iBA0BtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBC,YAAW,WACKC,KAAKC,SAAW,GAEhCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,gBA/BxBR,EAAKe,iBAAkB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAEJd,EAAQe,OAAOF,EAAMG,cAAcX,MAAMY,OAC3ChB,EAASc,OAAOF,EAAMG,cAAcE,KAAKD,OACzCf,EAAWa,OAAOF,EAAMG,cAAcG,OAAOF,OAE7C,IAAG,IAAIG,EAAG,EAAGA,GAAKlB,EAAUkB,IACzBjB,EAAciB,EAAGpB,GAClBqB,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACfV,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAGhEqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAChBV,EAAA4B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAI9DL,GAASC,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n//1. Достучаться до формы\n//2. На форму через Сабмит вешаем слушателя ч/з ф-цию, которая получает введенные значения \n//3. Функция: выводим введенные в форму значения\n//4. Перебираем значения, которые будут вводится как аргумент для  createPromise, где через установлленый таймаут выйдут сообщения  Notify\n//5. Период таймаута и шаг увеличения пеиода устанавливает пользователь\n//6. В ф-цию createPromise возвращаем новый Промис\n\n// №1\nconst formEl = document.querySelector(`.form`);\nlet delayEl = document.querySelector('[name=delay]');\nlet stepEl = document.querySelector('[name=step]');\nlet amountEl = document.querySelector('[name=amount]');\n// №2\nformEl.addEventListener(`submit`, onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n//  №3\n  delayEl = Number(event.currentTarget.delay.value);\n  stepEl = Number(event.currentTarget.step.value);\n  amountEl = Number(event.currentTarget.amount.value);\n  // №4\nfor (let i =1; i <= amountEl; i++) {   \n     createPromise(i, delayEl)   \n   .then(({ position, delay }) => {    \n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n     })\n\n   .catch(({ position, delay }) => {   \n       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n     })\n\n   // № 5\n   delayEl += stepEl;\n}\n}\n// № 6\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n   {    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3; \n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    });\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.637ae183.js.map"}